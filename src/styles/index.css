@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply p-0 m-0 overflow-y-scroll;
  }

  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  li,
  a {
    @apply outline-none focus-visible:ring-3 focus-visible:ring-nord15 focus-visible:ring-opacity-50;
  }

  video {
    @apply rounded-md;
  }
}

.iframely-responsive {
  top: 0;
  left: 0;
  width: 100%;
  height: 0;
  position: relative;
  padding-bottom: 56.25%;
}
.iframely-responsive > * {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  position: absolute;
  border: 0;
}

/* .safari-only will bump up the content so that the little bar on iphones doesn't cover the footer */
@media screen and (max-width: 767px) {
  _::-webkit-full-page-media,
  _:future,
  :root .safari-only {
    @apply pb-6;
  }
}

.sidebar-link {
  @apply flex flex-row items-center h-12 px-5 my-1 tracking-wider rounded-md outline-none cursor-pointer focus-visible:ring-3 focus-visible:ring-nord15 focus-visible:ring-opacity-50;
}

.sidebar-sublink {
  @apply flex flex-row items-center h-8 px-3 pl-8 text-sm tracking-wider text-center lowercase rounded-md outline-none cursor-pointer focus-visible:ring-3 focus-visible:ring-nord15 focus-visible:ring-opacity-50;
}

.sidebar-active-link,
.sidebar-active-sublink {
  @apply shadow-sm outline-none bg-nord5 dark:bg-nord1 focus-visible:ring-3 focus-visible:ring-nord15 focus-visible:ring-opacity-50;
}

.sublinks {
  @apply h-0 overflow-y-hidden;
}

.sublinks-expanded {
  @apply z-10 h-auto;
}

.tippy-content {
  overflow-wrap: anywhere;
}

@layer utilities {
  /** DO NOT PUT TRANSITION HELPERS IN UTILITIES, THEY WILL ONLY MESS UP TRANSITIONS ELSEWHERE **/
  .page-title {
    @apply text-xl font-black tracking-wider uppercase;
  }

  .keyboard-focus-visible,
  .keyboard-focus-within {
    @apply outline-none ring-offset-2 focus-visible:ring-2 focus-visible:ring-nord15;
  }

  .skew {
    @apply select-none;
    transform: skew(-20deg, 0deg);
  }

  .overflow-wrap-anywhere {
    overflow-wrap: anywhere;
  }

  .dropdown-item {
    @apply block px-4 py-2 text-sm leading-5 cursor-pointer hover:underline;
  }

  .radio,
  .checkbox {
    @apply border-gray-200 rounded shadow-sm outline-none cursor-pointer text-nord15 focus:border-nord15 focus:ring-3 focus:ring-nord15 focus:ring-opacity-50;
  }

  .btn {
    @apply text-nord6 text-lg px-3 py-1 font-semibold tracking-wide lowercase duration-100 ease-in rounded shadow-sm cursor-pointer outline-none;
  }

  .btn-nord7 {
    @apply btn bg-nord7 hover:ring-3 hover:z-30 hover:ring-opacity-50 hover:ring-nord7 focus-visible:ring-nord7 focus-visible:ring-3 focus-visible:ring-opacity-50;
  }

  .btn-nord9 {
    @apply btn bg-nord9 hover:ring-3 hover:z-30 hover:ring-opacity-50 hover:ring-nord9 focus-visible:ring-nord9 focus-visible:ring-3 focus-visible:ring-opacity-50;
  }

  .link {
    @apply p-0.5 duration-100 ease-in rounded outline-none cursor-pointer;
  }

  .link-nord10 {
    @apply link text-nord10 hover:ring-3 hover:z-30 hover:ring-opacity-50 hover:ring-nord10 focus-visible:ring-nord10 focus-visible:ring-3 focus-visible:ring-opacity-50;
  }

  .textarea {
    @apply px-3 py-2 leading-tight border-0 rounded shadow-sm text-lg text-primary outline-none focus-visible:ring-3 focus-visible:ring-nord15 focus-visible:ring-opacity-50;
  }

  .scrollbar::-webkit-scrollbar {
    @apply w-3 h-3 rounded-sm cursor-pointer;
  }

  .scrollbar::-webkit-scrollbar-track {
    @apply bg-nord5 dark:bg-nord1 bg-opacity-60 dark:bg-opacity-60;
  }

  .scrollbar::-webkit-scrollbar-thumb {
    @apply rounded-full cursor-pointer bg-nord4 dark:bg-nord2;
  }

  .modal-container,
  .loader-container {
    @apply fixed inset-0 flex flex-col items-center justify-center overflow-x-hidden overflow-y-auto outline-none z-300 focus:outline-none;
  }

  .translucent-overlay {
    @apply fixed inset-0 bg-gray-900 opacity-75 z-250;
  }

  .responsive-video-container video {
    @apply absolute top-0 left-0 w-full h-full rounded-md outline-none bg-black;
  }

  .chip {
    @apply inline-block px-3 py-1 text-sm font-semibold rounded-full;
  }

  .chip-sm {
    @apply inline-block px-2 py-1 text-xs font-semibold rounded-full;
  }

  .line {
    @apply flex-grow border-t-3 border-dotted border-nord6 dark:border-nord1;
  }

  /**
    this utility class is used during contextual routing to hide what the user last saw from them visually, but allow them to return to their scroll position once contextual routing is closed
  **/
  .hide-from-user {
    @apply invisible;
  }

  .label {
    @apply font-bold tracking-wide uppercase text-secondary;
  }

  .text-primary {
    @apply transition-none text-nord0 dark:text-nord6;
  }

  .text-secondary {
    @apply text-nord1 dark:text-nord5;
  }

  .bg-primary {
    @apply bg-[#F8F9FB] dark:bg-[#1C2028];
  }

  .border-primary {
    @apply border-[#F8F9FB] dark:border-[#1C2028];
  }
}

.map-enter {
  opacity: 0;
}
.map-enter-active {
  opacity: 1;
  transition: opacity 3000ms;
}
.map-exit {
  opacity: 1;
}
.map-exit-active {
  opacity: 0;
  transition: opacity 3000ms;
}

.fade-enter {
  opacity: 0;
  transform: scale(0.9);
}
.fade-enter-active {
  opacity: 1;
  transform: translateX(0);
  transition: opacity 300ms, transform 300ms;
}
.fade-exit {
  opacity: 1;
}
.fade-exit-active {
  opacity: 0;
  transform: scale(0.9);
  transition: opacity 300ms, transform 300ms;
}

.grow {
  animation: grow 600ms ease-in-out;
}

@keyframes grow {
  0% {
    transform: scale(1);
  }
  40% {
    transform: scale(1.15);
  }
  80% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}

.pulse {
  animation: pulse 1000ms infinite;
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.15);
  }
  100% {
    transform: scale(1);
  }
}

/* REACT TRANSITION GROUP CLASS NAMES */

.loader-enter {
  @apply opacity-0;
}
.loader-enter-active {
  @apply transition duration-300 opacity-100;
}
.loader-exit {
  @apply opacity-100;
}
.loader-exit-active {
  @apply transition duration-300 opacity-0;
}

.modal-enter {
  @apply opacity-0;
  transform: translateY(-15px);
}
.modal-enter-active {
  @apply transition duration-200 opacity-100;
  transform: translateY(0);
}
.modal-exit {
  @apply opacity-100;
}
.modal-exit-active {
  @apply transition duration-200 opacity-0;
  transform: translateY(15px);
}

.translucent-bg-enter {
  @apply opacity-0;
}
.translucent-bg-enter-active {
  @apply transition duration-200 opacity-75; /* never go above this (match child within CSSTransition) */
}
.translucent-bg-exit {
  @apply opacity-75; /* never go above this (match child within CSSTransition) */
}
.translucent-bg-exit-active {
  @apply transition duration-200 opacity-0;
}

.dropdown-enter {
  @apply transform scale-95 opacity-0;
}
.dropdown-enter-active {
  @apply transform scale-100 opacity-100;
}
.dropdown-exit {
  @apply transform scale-100 opacity-100;
}
.dropdown-exit-active {
  @apply transform scale-95 opacity-0;
}

span[data-img-src]::before {
  height: 400px !important;
  width: 400px !important;
}

.react-modal-content {
  @apply w-full h-full overflow-auto outline-none;
}

.react-modal-overlay {
  @apply fixed inset-0 z-30 bg-primary;
}

.ReactCollapse--collapse {
  transition: height 500ms;
}

.grow-wrap {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;
}
.grow-wrap::after {
  /* Note the weird space! Needed to preventy jumpy behavior */
  content: attr(data-replicated-value) ' ';

  /* This is how textarea text behaves */
  white-space: pre-wrap;

  /* Hidden from view, clicks, and screen readers */
  visibility: hidden;
}
.grow-wrap > textarea {
  /* You could leave this, but after a user resizes, then it ruins the auto sizing */
  resize: none;

  /* Firefox shows scrollbar on growth, you can hide like this. */
  overflow: hidden;
}
.grow-wrap > textarea,
.grow-wrap::after {
  /* Identical styling required!! */
  border: 1px solid black;
  padding: 0.5rem;
  font: inherit;

  /* Place on top of each other */
  grid-area: 1 / 1 / 2 / 2;
}
